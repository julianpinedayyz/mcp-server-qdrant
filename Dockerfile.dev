FROM python:3.12-slim

WORKDIR /app

# Install development dependencies
RUN pip install --no-cache-dir uv watchdog[watchmedo]

# We'll mount the local directory to /app, so we don't need to COPY
# This will ensure that local changes are picked up without rebuilding

# Install the project in development mode when the container starts
# This is done in the entrypoint script to ensure changes to setup.py are detected

# Expose the default port for SSE transport
EXPOSE 8000

# Create entrypoint script for development
COPY ./docker-entrypoint-dev.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/docker-entrypoint-dev.sh

# Set environment variables with defaults that can be overridden at runtime
ENV QDRANT_URL=""
ENV QDRANT_API_KEY=""
ENV COLLECTION_NAME="code-memories"
ENV EMBEDDING_MODEL="sentence-transformers/all-MiniLM-L6-v2"
ENV TOOL_STORE_DESCRIPTION="Store reusable code snippets for later retrieval. The 'information' parameter should contain a natural language description of what the code does, while the actual code should be included in the 'metadata' parameter as a 'code' property. The value of 'metadata' is a Python dictionary with strings as keys. Use this whenever you generate some code snippet."
ENV TOOL_FIND_DESCRIPTION="Search for relevant code snippets based on natural language descriptions. The 'query' parameter should describe what you're looking for, and the tool will return the most relevant code snippets. Use this when you need to find existing code snippets for reuse or reference."

# Development command with hot reload
ENTRYPOINT ["docker-entrypoint-dev.sh"]
